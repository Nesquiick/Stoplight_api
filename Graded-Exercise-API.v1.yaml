openapi: 3.0.0
info:
  title: Graded Exercise API
  version: '1.0'
  contact:
    name: Noiraud Lorele√Ø
  description: API which primary function is to serve as a platform for selling and buying used items. An example of this in Finland would be Tori.fi or globally ebay.com.
servers:
  - url: 'http://localhost:3000'
paths:
  '/users/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: Id of an existing user.
    get:
      summary: Get User Info by User ID
      tags: []
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  user_username:
                    type: string
                    minLength: 1
                  user_name:
                    type: string
                    minLength: 1
                  user_date_birth:
                    type: string
                    minLength: 1
                    format: date-time
                  user_address:
                    type: string
                    minLength: 1
                  user_email:
                    type: string
                    minLength: 1
                    format: email
                    example: john@demo.com
                  user_password:
                    type: string
                    minLength: 1
                    format: password
                    example: password_123
                required:
                  - user_username
                  - user_name
                  - user_date_birth
                  - user_address
                  - user_email
                  - user_password
        '404':
          description: User Not Found
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
  /users:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  user_id:
                    type: string
                    minLength: 1
                    format: uuid
                    example: 6a318be8-efae-4104-af4f-e662786142bb
                    description: The id assigned to the connected user (uuid format)
                required:
                  - user_id
        '400':
          description: Missing Required Information
        '418':
          description: User whith that username already exists
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                user_username:
                  type: string
                  minLength: 1
                  description: Publicicly visible username
                user_name:
                  type: string
                  minLength: 1
                  description: First and family name of the user
                user_date_birth:
                  type: string
                  minLength: 1
                  description: User's date of birth in RFC3339 format
                user_address:
                  type: string
                  minLength: 1
                  description: User's physical address
                user_email:
                  type: string
                  minLength: 1
                  format: email
                  example: john@demo.com
                  description: Valid email adress of the user
                user_password:
                  type: string
                  minLength: 1
                  format: password
                  example: password_123
                  description: Valid password of the user
              required:
                - user_username
                - user_name
                - user_date_birth
                - user_address
                - user_email
                - user_password
            examples:
              example:
                value:
                  user_username: jon29
                  user_name: John Doe
                  user_date_birth: '2000-01-24T01:30:36'
                  user_address: 'Tutkijantie 2, Oulu, Finland'
                  user_email: john@demo.com
                  user_password: password_123
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
    parameters: []
  /users/login:
    post:
      summary: ''
      operationId: post-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  user_id:
                    type: string
                    minLength: 1
                    format: uuid
                    example: 6a318be8-efae-4104-af4f-e662786142bb
                    description: The id assigned to the connected user
                required:
                  - user_id
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      description: Connect a user into the system.
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                user_username:
                  type: string
                  minLength: 1
                  example: jon29
                  description: Valid username of a user
                user_password:
                  type: string
                  minLength: 1
                  format: password
                  example: password_123
                  description: Valid password of a user
              required:
                - user_username
                - user_password
        description: ''
    parameters: []
  '/users/{user_id}/postings':
    parameters:
      - schema:
          type: string
        name: user_id
        in: path
        required: true
    post:
      summary: ''
      operationId: post-users-user_id-postings
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  posting_id:
                    type: string
                    minLength: 1
                    format: uuid
                    example: 6a358be8-efae-4104-ad4f-e662786142bb
                required:
                  - posting_id
        '400':
          description: Bad Request
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                posting_title:
                  type: string
                  minLength: 1
                posting_description:
                  type: string
                  minLength: 1
                posting_category:
                  type: string
                  minLength: 1
                posting_location:
                  type: string
                  minLength: 1
                posting_price:
                  type: number
                  minimum: 0
                posting_date:
                  type: string
                  minLength: 1
                  format: date-time
                posting_delivery_type:
                  type: string
                  minLength: 1
                  enum:
                    - Shipping
                    - PickUp
                posting_images:
                  type: array
                  uniqueItems: true
                  minItems: 0
                  maxItems: 3
                  items:
                    type: string
                seller_name:
                  type: string
                  minLength: 1
                seller_email:
                  type: string
                  minLength: 1
                  format: email
                seller_id:
                  type: string
                  minLength: 1
                  format: uuid
              required:
                - posting_title
                - posting_description
                - posting_category
                - posting_location
                - posting_price
                - posting_date
                - posting_delivery_type
                - posting_images
                - seller_name
                - seller_email
                - seller_id
            examples:
              example-1:
                value:
                  posting_title: string
                  posting_description: string
                  posting_category: string
                  posting_location: string
                  posting_price: 0
                  posting_posting_date: '2019-08-24T14:15:22Z'
                  posting_delivery_type: Shipping
                  posting_seller_contact:
                    seller_name: string
                    seller_email: john@demo.com
                  posting_images:
                    - ./images/image1.jpg
                    - ./images/image2.jpg
                    - ./images/image3.jpg
                    - ./images/image4.jpg
      description: Add a new item that the user sell.
    get:
      summary: ''
      operationId: get-users-user_id-postings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  posting_title:
                    type: string
                    minLength: 1
                  posting_description:
                    type: string
                    minLength: 1
                  posting_category:
                    type: string
                    minLength: 1
                  posting_location:
                    type: string
                    minLength: 1
                  posting_price:
                    type: number
                    minimum: 0
                  posting_date:
                    type: string
                    minLength: 1
                    format: date-time
                  posting_delivery_type:
                    type: string
                    minLength: 1
                    enum:
                      - Shipping
                      - PickUp
                  posting_images:
                    type: array
                    uniqueItems: true
                    minItems: 0
                    maxItems: 3
                    items:
                      type: string
                  seller_name:
                    type: string
                    minLength: 1
                  seller_email:
                    type: string
                    minLength: 1
                    format: email
                  seller_id:
                    type: string
                    minLength: 1
                    format: uuid
                required:
                  - posting_title
                  - posting_description
                  - posting_category
                  - posting_location
                  - posting_price
                  - posting_date
                  - posting_delivery_type
                  - posting_images
                  - seller_name
                  - seller_email
                  - seller_id
      description: Get all the posting(s) of a user
  '/users/{user_id}/postings/{posting_id}':
    parameters:
      - schema:
          type: string
        name: user_id
        in: path
        required: true
      - schema:
          type: string
        name: posting_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  posting_title:
                    type: string
                    minLength: 1
                  posting_description:
                    type: string
                    minLength: 1
                  posting_category:
                    type: string
                    minLength: 1
                  posting_location:
                    type: string
                    minLength: 1
                  posting_price:
                    type: number
                    minimum: 0
                  posting_date:
                    type: string
                    minLength: 1
                    format: date-time
                  posting_delivery_type:
                    type: string
                    minLength: 1
                    enum:
                      - Shipping
                      - PickUp
                  posting_images:
                    type: array
                    uniqueItems: true
                    minItems: 0
                    maxItems: 3
                    items:
                      type: string
                  seller_name:
                    type: string
                    minLength: 1
                  seller_email:
                    type: string
                    minLength: 1
                    format: email
                  seller_id:
                    type: string
                    minLength: 1
                    format: uuid
                required:
                  - posting_title
                  - posting_description
                  - posting_category
                  - posting_location
                  - posting_price
                  - posting_date
                  - posting_delivery_type
                  - posting_images
                  - seller_name
                  - seller_email
                  - seller_id
              examples: {}
        '404':
          description: Not Found
      operationId: get-users-user_id-postings-posting_id
      description: Get all the information of a posting
    put:
      summary: ''
      operationId: put-users-user_id-postings-posting_id
      responses:
        '204':
          description: No Content
        '304':
          description: Not Modified
      description: Modify a posting
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                posting_title:
                  type: string
                  minLength: 1
                posting_description:
                  type: string
                  minLength: 1
                posting_category:
                  type: string
                  minLength: 1
                posting_location:
                  type: string
                  minLength: 1
                posting_price:
                  type: number
                  minimum: 0
                posting_date:
                  type: string
                  minLength: 1
                  format: date-time
                posting_delivery_type:
                  type: string
                  minLength: 1
                  enum:
                    - Shipping
                    - PickUp
                posting_images:
                  type: array
                  uniqueItems: true
                  minItems: 0
                  maxItems: 3
                  items:
                    type: string
                seller_name:
                  type: string
                  minLength: 1
                seller_email:
                  type: string
                  minLength: 1
                  format: email
                seller_id:
                  type: string
                  minLength: 1
                  format: uuid
              required:
                - posting_title
                - posting_description
                - posting_category
                - posting_location
                - posting_price
                - posting_date
                - posting_delivery_type
                - posting_images
                - seller_name
                - seller_email
                - seller_id
        description: ''
    delete:
      summary: ''
      operationId: delete-users-user_id-postings-posting_id
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '404':
          description: Not Found
      description: Delete a posting
  /postings:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  posting_title:
                    type: string
                    minLength: 1
                  posting_description:
                    type: string
                    minLength: 1
                  posting_category:
                    type: string
                    minLength: 1
                  posting_location:
                    type: string
                    minLength: 1
                  posting_price:
                    type: number
                    minimum: 0
                    exclusiveMaximum: false
                  posting_date:
                    type: string
                    minLength: 1
                    format: date-time
                  posting_delivery_type:
                    type: string
                    minLength: 1
                    enum:
                      - Shipping
                      - PickUp
                  posting_images:
                    type: array
                    uniqueItems: true
                    minItems: 0
                    maxItems: 3
                    items:
                      type: string
                  seller_name:
                    type: string
                    minLength: 1
                  seller_email:
                    type: string
                    minLength: 1
                    format: email
                  seller_id:
                    type: string
                    minLength: 1
                    format: uuid
                required:
                  - posting_title
                  - posting_description
                  - posting_category
                  - posting_location
                  - posting_price
                  - posting_date
                  - posting_delivery_type
                  - posting_images
                  - seller_name
                  - seller_email
                  - seller_id
              examples: {}
        '404':
          description: Not Found
      operationId: get-postings
      description: 'Get the list of every postings that can be sorted by the date, the category and Location'
  '/postings/{posting_id}':
    parameters:
      - schema:
          type: string
        name: posting_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  posting_title:
                    type: string
                    minLength: 1
                  posting_description:
                    type: string
                    minLength: 1
                  posting_category:
                    type: string
                    minLength: 1
                  posting_location:
                    type: string
                    minLength: 1
                  posting_price:
                    type: number
                    minimum: 0
                  posting_date:
                    type: string
                    minLength: 1
                    format: date-time
                  posting_delivery_type:
                    type: string
                    minLength: 1
                    enum:
                      - Shipping
                      - PickUp
                  posting_images:
                    type: array
                    uniqueItems: true
                    minItems: 0
                    maxItems: 3
                    items:
                      type: string
                  seller_name:
                    type: string
                    minLength: 1
                  seller_email:
                    type: string
                    minLength: 1
                    format: email
                  seller_id:
                    type: string
                    minLength: 1
                    format: uuid
                required:
                  - posting_title
                  - posting_description
                  - posting_category
                  - posting_location
                  - posting_price
                  - posting_date
                  - posting_delivery_type
                  - posting_images
                  - seller_name
                  - seller_email
                  - seller_id
      operationId: get-postings-posting_id
      description: Get the information of one posting
components:
  schemas:
    users:
      title: Users
      type: object
      description: 'Here is how a user is describe :'
      x-examples:
        example_John-Doe:
          user_id: 6a318be8-efae-4104-af4f-e662786142bb
          user_username: pseudonym
          user_name: John Doe
          user_date_birth: '2000-01-24T01:30:36'
          user_email: john@demo.com
          user_address: 'Tutkijantie 2, Oulu, Finland'
          user_password": password123
      properties:
        user_id:
          type: string
          format: uuid
          description: Unique identifier for the given user.
        user_username:
          type: string
          description: Publicicly visible username
        user_name:
          type: string
          description: First and family name of the user
        user_date_birth:
          type: string
          format: date-time
          description: User‚Äôs date of birth in RFC3339 format
        user_email:
          type: string
          format: email
          description: Valid email adress of the user
        user_address:
          type: string
          description: User‚Äôs physical address
        user_password:
          type: string
          format: password
          description: Valid password of the user
      required:
        - user_id
        - user_username
        - user_name
        - user_date_birth
        - user_email
        - user_address
        - user_password"
    postings:
      description: 'Here is how a posting is describe : '
      type: object
      properties:
        posting_title:
          type: string
          minLength: 1
        posting_description:
          type: string
          minLength: 1
        posting_category:
          type: string
          minLength: 1
        posting_location:
          type: string
          minLength: 1
        posting_price:
          type: number
        posting_posting_date:
          type: string
          minLength: 1
        posting_delivery_type:
          type: string
          minLength: 1
          enum:
            - Shipping
            - Pickup
        posting_seller_contact:
          type: object
          required:
            - seller_name
            - seller_email
          properties:
            seller_name:
              type: string
              minLength: 1
            seller_email:
              type: string
              minLength: 1
              format: email
              example: demo@demo.fi
        images:
          type: array
          minItems: 0
          maxItems: 3
          items:
            type: string
      required:
        - posting_title
        - posting_description
        - posting_category
        - posting_location
        - posting_price
        - posting_posting_date
        - posting_delivery_type
        - posting_seller_contact
        - images
      x-examples:
        example_book:
          posting_title: Alice in wonderland
          posting_description: Story of a young girl that fall in a strange world
          posting_category: Book
          posting_location: 'Oulu, Finland'
          posting_price: 10
          posting_posting_date: 03/02/2021
          posting_delivery_type: Shipping
          posting_seller_contact:
            seller_name: Lorele√Ø Noiraud
            seller_email: demo@demo.fi
          images:
            - ./images/Alice_03-02-2021_bookcover.jpg
            - ./images/Alice_03-02-2021_bookcover2.jpg
